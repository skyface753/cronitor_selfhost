services:
  client:
    image: skyface753/cronitor-client:latest
    build:
      context: client-react
      dockerfile: Dockerfile
    # ports:
    #   - '3000:3000'
    environment:
      NODE_ENV: production
    volumes:
      - ./jobs.json:/jobs.json

  server:
    image: skyface753/cronitor-server:latest
    build:
      context: server
      dockerfile: Dockerfile
    # ports:
    #   - '8000:8000'
    environment:
      APIKEY: ${APIKEY}
      MAIL_DISABLED: ${MAIL_DISABLED}
      MONGODB_CONNECTION_URI: ${MONGODB_CONNECTION_URI}
      DB_NAME: ${DB_NAME}
      COLL_NAME: ${COLL_NAME}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_FROM: ${SMTP_FROM}
      SMTP_TO: ${SMTP_TO}
      SMTP_USERNAME: ${SMTP_USERNAME}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
    depends_on:
      - mongodb
    volumes:
      - ./jobs.json:/jobs.json

  proxy:
    image: skyface753/cronitor-proxy:latest
    build:
      context: ./proxy
      dockerfile: Dockerfile
    ports:
      - 81:80
    restart: always
    depends_on:
      - server
      - client

  mongodb:
    image: mongo:latest
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    volumes:
      - ./data:/data/db
    environment:
      TZ: Europe/Berlin
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
    healthcheck:
      test: 'curl -f http://localhost:27017'
      interval: 5s
      timeout: 10s
      retries: 5

  # express:
  #   image: mongo-express:latest
  #   ports:
  #     - '8081:8081'
  #   environment:
  #     ME_CONFIG_MONGODB_ADMINUSERNAME: admin
  #     ME_CONFIG_MONGODB_ADMINPASSWORD: admin
  #     ME_CONFIG_MONGODB_SERVER: mongodb
  #     ME_CONFIG_MONGODB_PORT: 27017
  #     ME_CONFIG_MONGODB_ENABLE_ADMIN: 'true'
  #     ME_CONFIG_BASICAUTH_USERNAME: admin
  #     ME_CONFIG_BASICAUTH_PASSWORD: admin

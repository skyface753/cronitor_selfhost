services:
  client:
    image: skyface753/cronitor-client:latest
    build:
      context: client-react
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_DEV=True
    ports:
      - '127.0.0.1:3000:3000'
    environment:
      TZ: Europe/Berlin
      NODE_ENV: production

  server:
    image: skyface753/cronitor-server:latest
    build:
      context: server
      dockerfile: Dockerfile
    ports:
      - '127.0.0.1:8000:8000'
    environment:
      TZ: Europe/Berlin
      APIKEY: ${APIKEY}
      DATABASE_URL: ${DATABASE_URL}
      NOTIFY_MAIL: ${NOTIFY_MAIL}
      NOTIFY_DISCORD: ${NOTIFY_DISCORD}
      NOTIFY_SLACK: ${NOTIFY_SLACK}
      DISCORD_WEBHOOK_URL: ${DISCORD_WEBHOOK_URL}
      SLACK_WEBHOOK_URL: ${SLACK_WEBHOOK_URL}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_FROM: ${SMTP_FROM}
      SMTP_TO: ${SMTP_TO}
      SMTP_USERNAME: ${SMTP_USERNAME}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      SHOW_DOCS: ${SHOW_DOCS}
    depends_on:
      - db
    volumes:
      - ./jobs.json:/jobs.json

  db:
    container_name: pg_container
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: job_user
      POSTGRES_PASSWORD: job_password
      POSTGRES_DB: job_db # postgres_url: postgresql://job_user:job_password@db:5432/job_db


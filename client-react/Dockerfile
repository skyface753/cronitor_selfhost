# syntax=docker/dockerfile:1
ARG NODE_VERSION=16.20.1
FROM node:${NODE_VERSION}-alpine as base

ARG NEXT_PUBLIC_DEV
ENV NEXT_PUBLIC_DEV=${NEXT_PUBLIC_DEV}
WORKDIR /usr/src/app
FROM base as deps
RUN --mount=type=bind,source=package.json,target=package.json \
    --mount=type=bind,source=package-lock.json,target=package-lock.json \
    --mount=type=cache,target=/root/.npm \
    npm ci --omit=dev
FROM deps as build
RUN --mount=type=bind,source=package.json,target=package.json \
    --mount=type=bind,source=package-lock.json,target=package-lock.json \
    --mount=type=cache,target=/root/.npm \
    npm ci
COPY . .
RUN npm run build

# FINAL STAGE
FROM base as final
ENV NODE_ENV production
USER node
COPY package.json .
COPY --from=deps /usr/src/app/node_modules ./node_modules
COPY --from=build /usr/src/app/.next ./.next
EXPOSE 3000
CMD npm start
